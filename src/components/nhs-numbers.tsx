/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/90yvHoj92lP
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { useState } from "react";
import { generateNHSNumber, isValidNHSNumber } from "@/utils/nhs-number-generator";
import CopyToClipboardButton from "./copy-to-clipboard";

export function NhsNumbers() {

  const [nhsNumber, setNhsNumber] = useState('');
  const [requestedNhsNumber, setRequestedNhsNumber] = useState('');
  const [validationResult, setValidationResult] = useState('');
  const [message, setMessage] = useState<string>('');

  const handleGenerate = () => {
    setRequestedNhsNumber(generateNHSNumber());
  };

  const handleValidate = () => {
    if (isValidNHSNumber(nhsNumber)) {
      setValidationResult('Valid NHS Number');
    } else {
      setValidationResult('Invalid NHS Number');
    }
  };

  return (
    <Card key="1" className="max-w-2xl mx-auto space-y-8 p-6 bg-[#005eb8] dark:bg-[#005eb8] text-white">
      <CardHeader>
        <CardTitle className="text-2xl">NHS Number Generator and Validator</CardTitle>
        <CardDescription aria-label="Description" className="text-[#f8f9fa]">
          Generate a fake NHS number or validate an existing one.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-6 bg-">
          <div className="space-y-2">
            <Button onClick={handleGenerate} className="w-full my-2 bg-[#007f3b] dark:bg-[#007f3b] hover:bg-[#025a2b] hover:dark:bg-[#025a2b] text-white">Generate Fake NHS Number</Button>
            <div className="mt-2 p-2 rounded text-white">
              <p>Your generated number will appear here.</p>
              <pre className="p-2 my-2 bg-gray-400 rounded text-black">{requestedNhsNumber}</pre>
              {requestedNhsNumber &&
                <div className="flex justify-center mt-2 flex-col">
                  <>
                    <CopyToClipboardButton
                      textToCopy={requestedNhsNumber}
                      onSuccess={(msg) => setMessage(msg)}
                      onError={(msg) => setMessage(msg)}
                    />
                  </>
                  {message && <p className="text-center py-4 font-bold">{message}</p>}
                </div>
              }
            </div>
          </div>
          <div className="border-t border-white dark:border-white py-4">
            <h2 className="text-xl mb-2">Validate NHS Number</h2>
            <div className="space-y-2">
              <Label className="text-white" htmlFor="nhs-number">
                NHS Number
              </Label>
              <Input
                value={nhsNumber}
                onChange={(e) => setNhsNumber(e.target.value)}
                className="bg-white text-black dark:text-black" id="nhs-number" placeholder="Enter NHS number" />
            </div>
            <Button onClick={handleValidate} className="w-full my-2 bg-[#007f3b] dark:bg-[#007f3b] hover:bg-[#025a2b] text-white" type="submit">
              Validate
            </Button>
            {validationResult &&
              <pre className="p-2 my-4 bg-gray-400 rounded text-black">{validationResult}</pre>
            }
          </div>
        </div>
      </CardContent>
    </Card>
  )
}
